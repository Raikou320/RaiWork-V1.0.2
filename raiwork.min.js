import Scene from './modules/scene.js';

class Game {
  constructor() {
    this.scenes = [];
  }
  addScene(name, width, height, background) {
    const scene = new Scene(name, width, height, background);
    this.scenes.push(scene);
  }
  addSceneObject(sceneName, object) {
    const index = this.scenes.findIndex((scene) => scene.name === sceneName);
    if (index !== -1) {
      this.scenes[index].addObject(object);
    } else {
      console.warn(sceneName, 'This scene name is not correct did you mean:');
      this.scenes.forEach((scene) => console.warn(scene.name));
    }
  }
  modifySceneWidth(sceneName, newWidth) {
    const index = this.scenes.findIndex((scene) => scene.name === sceneName);
    if (index !== -1) {
      this.scenes[index].width = newWidth;
    } else {
      console.warn(sceneName, 'This scene name is not correct did you mean:');
      this.scenes.forEach((scene) => console.warn(scene.name));
    }
  }
  modifySceneHeight(sceneName, newHeight) {
    const index = this.scenes.findIndex((scene) => scene.name === sceneName);
    if (index !== -1) {
      this.scenes[index].height = newHeight;
    } else {
      console.warn(sceneName, 'This scene name is not correct did you mean:');
      this.scenes.forEach((scene) => console.warn(scene.name));
    }
  }
  renderScene(sceneName) {
    const index = this.scenes.findIndex((scene) => scene.name === sceneName);
    if (index !== -1) {
      this.scenes[index].render();
    } else {
      console.warn(sceneName, 'This scene name is not correct did you mean:');
      this.scenes.forEach((scene) => console.warn(scene.name));
    }
  }
  findScene(sceneName) {
    const index = this.scenes.findIndex((scene) => scene.name === sceneName);
    if (index !== -1) {
      const scene = this.scenes[index];
      return scene;
    } else {
      console.warn(sceneName, 'This scene name is not correct did you mean:');
      this.scenes.forEach((scene) => console.warn(scene.name));
    }
  }
  removeSceneRender(sceneName) {
    const index = this.scenes.findIndex((scene) => scene.name === sceneName);
    if (index !== -1) {
      this.scenes[index].removeRender();
    } else {
      console.warn(sceneName, 'This scene name is not correct did you mean:');
      this.scenes.forEach((scene) => console.warn(scene.name));
    }
  }
}

const game = new Game();
game.addScene('myScene', 800, 600, '#008800');
game.addSceneObject('myScene', {
  x: 25,
  y: 25,
  color: 'blue',
  drawMode: 'rect',
  width: 40,
  height: 55,
  stroke: true,
});
game.addSceneObject('myScene', {
  x: 200,
  y: 200,
  radius: 25,
  color: 'blue',
  drawMode: 'arc',
  startAngle: 0,
  endAngle: 2 * Math.PI,
  stroke: true,
});
game.renderScene('myScene');
